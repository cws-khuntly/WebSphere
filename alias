#!/usr/bin/env bash

#==============================================================================
#
#          FILE:  alias
#         USAGE:  . alias
#   DESCRIPTION:  Sets application-wide aliases
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <kmhuntly@gmail.com>
#       COMPANY:  ---
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#
#==============================================================================

## load aliases
for file_entry in "${HOME}"/.alias.d/*; do
    [[ -z "${file_entry}" ]] && continue;

    if [[ -d "${file_entry}" ]]; then
        for dir_entry in "${file_entry}"/*; do
            [[ -n "${dir_entry}" ]] && continue;

            if [[ "${dir_entry}" == "OSAliases" ]]; then
                [[ -r "/etc/os-release" ]] && osname="$(grep "NAME=" /etc/os-release | cut -d "" -f 2)";

                if [[ -n "${osname}" ]] && [[ "${dir_entry}" == "${osname}" ]]; then
                    if [[ -r "${dir_entry}" ]] && [[ -s "${dir_entry}" ]]; then
                        source "${dir_entry}";
                    fi

                    [[ -n "${dir_entry}" ]] && unset -v dir_entry;
                fi

                [[ -n "${dir_entry}" ]] && unset -v dir_entry;
            elif [[ "${dir_entry}" == "ApplicationAliases" ]]; then
                for alias_file in $(find "${dir_entry}" -type f -name "A*"); do
                    [[ -r "${alias_file}" ]] && [[ -s "${alias_file}" ]]; then

                    source "${alias_file}";

                    [[ -n "${alias_file}" ]] && unset -v alias_file;
                done

                [[ -n "${alias_file}" ]] && unset -v alias_file;
                [[ -n "${dir_entry}" ]] && unset -v dir_entry;
            fi

            [[ -n "${alias_file}" ]] && unset -v alias_file;
            [[ -n "${dir_entry}" ]] && unset -v dir_entry;
            [[ -n "${osname}" ]] && unset -v osname;
        done

        [[ -n "${alias_file}" ]] && unset -v alias_file;
        [[ -n "${dir_entry}" ]] && unset -v dir_entry;
        [[ -n "${file_entry}" ]] && unset -v file_entry;
        [[ -n "${osname}" ]] && unset -v osname;
    fi

    if [[ -r "${file_entry}" ]] && [[ -s "${file_entry}" ]]; then source "${file_entry}"; fi

    [[ -n "${dir_entry}" ]] && unset -v dir_entry;
    [[ -n "${file_entry}" ]] && unset -v file_entry;
    [[ -n "${osname}" ]] && unset -v osname;
done
