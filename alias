#!/usr/bin/env bash

#==============================================================================
#
#          FILE:  alias
#         USAGE:  . alias
#   DESCRIPTION:  Sets application-wide aliases
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <kmhuntly@gmail.com>
#       COMPANY:  ---
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#
#==============================================================================

## load aliases
for entry in ${HOME}/.alias.d/*; do
    [[ -z "${entry}" ]] && continue;

    if [[ -f "${entry}" ]]; then
        [[ -r "${entry}" ]] && [[ -s "${entry}" ]] && source "${entry}";

        [[ -n "${entry}" ]] && unset -v entry;
    elif [[ -d "${entry}" ]]; then
        dir_name="$(awk -F "/" '{print $NF}' <<< "${entry}")";

        [[ -z "${dir_name}" ]] && continue;

        if [[ "${dir_name}" == "OSAliases" ]]; then
            [[ -r "/etc/os-release" ]] && osname="$(grep "NAME=" /etc/os-release | cut -d "" -f 2)";

            if [[ -n "${osname}" ]] && [[ "${dir_name}" == "${osname}" ]]; then
                for os_entry in ${dir_name}/*; do
                    [[ -z "${os_entry}" ]] && continue;

                    [[ -r "${os_entry}" ]] && [[ -s "${os_entry}" ]] && source "${os_entry}";

                    [[ -n "${os_entry}" ]] && unset -v os_entry;
                done
            fi
        elif [[ "${dir_name}" == "ApplicationAliases" ]]; then
            for subdir in $(ls -ltrR | grep -E "^d" | awk '{print $NF}'); do
                [[ -z "${subdir}" ]] && continue;

                for app_entry in ${subdir}/*; do
                    [[ -z "${app_entry}" ]] && continue;

                    [[ -r "${app_entry}" ]] && [[ -s "${app_entry}" ]] && source "${app_entry}";

                    [[ -n "${app_entry}" ]] && unset -v app_entry;
                done
            done
        fi
    fi

    [[ -n "${subdir}" ]] && unset -v subdir;
    [[ -n "${os_entry}" ]] && unset -v os_entry;
    [[ -n "${dir_name}" ]] && unset -v dir_name;
    [[ -n "${entry}" ]] && unset -v entry;
done
