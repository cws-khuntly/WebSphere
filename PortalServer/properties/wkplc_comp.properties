##############################################################################
#
# Configuration Framework Component Properties File
#
# key = value
#
# NOTE: Do NOT enclose any value in quotes!
# NOTE: Windows paths must use '/', not '\'.
# NOTE: Windows long paths are OK
# NOTE: Properties are immutable. Once set, they cannot be overriden.
#       Precedence is as follows, in decending order:
#           Properties set on command line are read first (-DMyNode=somenode)
#           Properties set in properties file are read next,
#           Properties set in buildfile file are read last.
#
###############################################################################


##### BEGIN WP.AUTH.TAI PROPERTIES #####
# WP.AUTH.TAI loaded from: /opt/IBM/WebSphere/PortalServer/base/wp.auth.tai/wp.auth.tai.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. Advanced Security Configuration using External Security Managers
#
#  2. HTTP Basic Authentication Trust Association Interceptor (TAI) settings
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) Advanced Security Configuration using External Security Managers
#
#    The following parameters are used for advanced security configuration using external security 
#    managers. Use the properties to specify namespace management parameters that are common to TAM 
#    and SiteMinder
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.facebook_app_secret_alias
#
# Description:  Do not change the value of this attribute unless specifically directed to do so by 
#               IBM Support.
#
#     Default:  facebook_app_secret
#
#    Examples:  None available

wp.auth.tai.facebook_app_secret_alias=facebook_app_secret

###################################################################################################
###################################################################################################
#
# 2) HTTP Basic Authentication Trust Association Interceptor (TAI) settings
#
#    WebSphere Portal uses the following information to configure an HTTP Basic Authentication 
#    Trust Association Interceptor (TAI) to authenticate incoming requests using the HTTP Basic 
#    Authentication Protocol described in RFC 2617.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthEnabled
#
# Description:  Defines whether the basic authentication TAI is active (authenticates requests) or 
#               not.
#
#     Default:  true
#
#    Examples:  None available

wp.auth.tai.BasicAuthEnabled=true

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthRealm
#
# Description:  This is the name of an authentication realm as defined in RFC 2617. The TAI 
#               challenges the client to authenticate against this realm. The default value for 
#               this property is the same authentication realm name as the one that is used by 
#               portal HTTP form based login.
#
#     Default:  WPS
#
#    Examples:  None available

wp.auth.tai.BasicAuthRealm=WPS

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthUseRegExp
#
# Description:  This value determines whether or not the patterns that you specified for the black 
#               list and white list properties are to be interpreted as Java regular expressions. 
#               For more information see: 
#               http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html. If Java 
#               regular expressions are not used, then only asterisks are supported as wild cards. 
#               The following applies to asterisks:
#
#               -- The asterisk ( * ) wildcard can appear anywhere in the pattern.
#               -- You can use multiple asterisk ( * ) wildcards within the same pattern.
#               -- If you want to represent an asterisk as an actual character for matches in the 
#                  pattern instead of using it as a wildcard, prefix it with a backslash like this: 
#                  \* .
#               -- To represent the backslash as a character for matching, code it by using a 
#                  double backslash: \\ .
#
#     Default:  false
#
#    Examples: 
#       1) (Regular expression) Match every user agent that does not contain an uppercase X in its product name:         * [^X]*
#       2) (Regular expression) Match every user agent that contains my_browser in its product name:                     * .*my_browser.*
#       3) (Regular expression)Includes URL encoding for .*[X] and matches every URL that ends with X:                   * .*%5bX%5d
#       4) (Asterisk) Match every user agent that contains my_browser in its product name:                               * *my_browser*
#       5) (Asterisk) Match every URL that starts with /myprefix and ends with mysuffix:                                 * /myprefix*mysuffix
#       6) (Asterisk) Only match a user agent that has Fun* Ag\ent as product name:                                      * Fun\* Ag\\ent

wp.auth.tai.BasicAuthUseRegExp=false

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthLoginTarget
#
# Description:  This value is the alias of the JAAS login configuration that is used by the TAI. 
#               The default value is the same JAAS login configuration as the one that is used by 
#               portal HTTP form based login. The value is the target to execute to populate the 
#               Subject with portal specific Principals when logging on using the TAI.
#
#     Default:  Portal_LTPA
#
#    Examples:  None available

wp.auth.tai.BasicAuthLoginTarget=Portal_LTPA

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthUserAgentBlackList
#
# Description:  This is the list of patterns for which you do not want the TAI to handle the 
#               requests. Separate the patterns using a whitespaces. Every product name in the HTTP 
#               header field User-Agent of incoming requests is compared with each of the patterns 
#               specified for this property. If the TAI is enabled and the URL matches at least one 
#               of the patterns specified for the userAgentBlackList property, the TAI will not 
#               handle the request. To use Java regular expressions, you must set the property 
#               wp.auth.tai.BasicAuthUseRegExp = true.
#
#     Default:  AllAgentsAllowed
#
#    Examples:  None available

wp.auth.tai.BasicAuthUserAgentBlackList=AllAgentsAllowed

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthUserAgentWhiteList
#
# Description:  This is the list of patterns for which you want the TAI to handle the requests. 
#               Separate the patterns by whitespaces. Every product name in the HTTP header field 
#               User-Agent of the incoming request is compared with each of the patterns specified 
#               for this property.If the TAI is enabled and the pattern specified for this property 
#               has at least one match and neither of the userAgentBlackList or the urlBlackList 
#               have a match, then the TAI handles the request. To use Java regular expressions, 
#               you must set the property wp.auth.tai.BasicAuthUseRegExp = true You can specify the 
#               patterns with an asterisk ( * ) as a wild card character. You can also define the 
#               patterns as Java regular expressions.
#
#     Default:  NoAgentSpecified
#
#    Examples:  None available

wp.auth.tai.BasicAuthUserAgentWhiteList=NoAgentSpecified

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthUrlBlackList
#
# Description:  This is the list of URI patterns this TAI will never handle. Separate the patterns 
#               by whitespaces. The full path information of the URL of the incoming request is 
#               compared with each of the patterns specified for this parameter. Before comparing 
#               the URL to the patterns, the protocol, server, port, and query information is 
#               removed from the URL. If the TAI is enabled and the URL matches at least one of the 
#               patterns specified for the urlBlackList property, the TAI will not handle the 
#               request. To use Java regular expressions, you must set the property 
#               wp.auth.tai.BasicAuthUseRegExp = true. Use the following syntax rules for 
#               specifying the patterns:
#
#                 You can use URI encoded patterns, such as using %20 to encode blank spaces.
#                 Use only characters that are valid within a URI, and encode all other characters.
#                 You can use an asterisk ( * ) as a wild card character.
#
#     Default:  ${WpsContextRootPath}/myportal*
#
#    Examples:  None available

wp.auth.tai.BasicAuthUrlBlackList=/${WpsContextRoot}/myportal*

# -------------------------------------------------------------------------------------------------
#    Property:  wp.auth.tai.BasicAuthUrlWhiteList
#
# Description:  This is the list of patterns for which you want the TAI to handle the requests. 
#               Separate the patterns by whitespaces. The full path information of the URL of the 
#               incoming request is compared with each of the patterns specified for this 
#               parameter. Before comparing the URL to the patterns, the protocol, server, port, 
#               and query information is removed from the URL. If the TAI is enabled and the 
#               pattern specified for this property has at least one match and neither of the 
#               userAgentBlackList or the urlBlackList have a match, then the TAI handles the 
#               request. To use Java regular expressions, you must set the property 
#               wp.auth.tai.BasicAuthUseRegExp = true. Use the following syntax rules for 
#               specifying the patterns:
#
#                 You can use URI encoded patterns, such as using %20 to encode blank spaces.
#                 Use only characters that are valid within a URI, and encode all other characters.
#                 You can use an asterisk ( * ) as a wild card character.
#
#     Default:  ${WpsContextRootPath}/mycontenthandler*
#
#    Examples:  None available

wp.auth.tai.BasicAuthUrlWhiteList=/${WpsContextRoot}/mycontenthandler*
##### END WP.AUTH.TAI PROPERTIES #####

##### BEGIN WP.XML.CLIENT PROPERTIES #####
# WP.XML.CLIENT loaded from: /opt/IBM/WebSphere/PortalServer/base/wp.xml.client/wp.xml.client.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. XMLAccess properties
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) XMLAccess properties
#
#    The following properties are specific to XMLAccess.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  XmlAccessHost
#
# Description:  The local host name of WebSphere Portal. You do not need to modify this value.
#
#     Default:  localhost
#
#    Examples:  None available

XmlAccessHost=localhost

# -------------------------------------------------------------------------------------------------
#    Property:  XmlAccessPort
#
# Description:  The port used by XML Access configuration tasks to connect to the XMLAccess server 
#               Do not use this parameter to reconfigure the XmlAccessPort port. The value is set 
#               by the basic WebSphere Portal configuration task.
#
#     Default:  10040
#
#     Example:  12345

XmlAccessPort=10039

# -------------------------------------------------------------------------------------------------
#    Property:  XmlAccessProtocol
#
# Description:  The protocol used to connect to the XMLAccess server.
#
#      Values:  
#         http
#         https
#
#     Default:  http
#
#    Examples:  None available

XmlAccessProtocol=http
##### END WP.XML.CLIENT PROPERTIES #####

##### BEGIN WP.EAR PROPERTIES #####
# WP.EAR loaded from: /opt/IBM/WebSphere/PortalServer/installer/wp.ear/wp.ear.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. WebSphere Portal URLs
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) WebSphere Portal URLs
#
#    Define the URL that is used to access your portal site.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  WpsDefaultHome
#
# Description:  
#               
#               The first page that site visitors see before they log in to the site. Valid 
#               characters are alphabetic and numeric including underscore and dash. The value 
#               entered must be different than the Personalized Home value. If portal is the 
#               default home, the following is an example of the URL for the site: 
#               http://localhost:10039/wps/portal
#               
#               In this example:
#
#               -- localhost is the portal host name (WpsHostName)
#               -- 10039 is the host port (WpsHostPort)
#               -- wps is the context root (WpsContextRoot).
#
#     Default:  portal
#
#     Example:  portal

WpsDefaultHome=portal

# -------------------------------------------------------------------------------------------------
#    Property:  WpsPersonalizedHome
#
# Description:  The page that site visitors see after they log in to the site. Valid characters are 
#               alphabetic and numeric including underscore and dash.The value entered must be 
#               different than the Default Home value. If myportal is the personalized home, then 
#               the following is an example URL for the site: http://localhost:10039/wps/myportal
#               
#               In this example:
#
#               -- localhost is the portal host name (WpsHostName)
#               -- 10039 is the host port (WpsHostPort)
#               -- wps is the context root (WpsContextRoot).
#
#     Default:  myportal
#
#     Example:  myportal

WpsPersonalizedHome=myportal
##### END WP.EAR PROPERTIES #####

##### BEGIN WP.SI PROPERTIES #####
# WP.SI loaded from: /opt/IBM/WebSphere/PortalServer/solutionInstaller/wp.si/wp.si.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. Solution Installer settings
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) Solution Installer settings
#
#    WebSphere Portal using the following information to configure the Solution Installer
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.offeringName
#
# Description:  Defines the name of paa offering directory
#
#     Default:  paa
#
#    Examples: 
#       1) 
#       2) 
#       3) 

wp.si.offeringName=paa

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.configInstallExtensionList
#
# Description:  Defines extension for applying SI feature pack
#
#     Default:  -applySIFeaturePack
#
#     Example:  -applySIFeaturePack

wp.si.configInstallExtensionList=-applySIFeaturePack

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.configRemoveExtensionList
#
# Description:  Defines extension for removing SI feature pack
#
#     Default:  -removeSIFeaturePack
#
#     Example:  -removeSIFeaturePack

wp.si.configRemoveExtensionList=-removeSIFeaturePack

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.configInstallUpdateExtensionList
#
# Description:  Defines extension for updating SI feature pack
#
#     Default:  -updateSIFeaturePack
#
#     Example:  -updateSIFeaturePack

wp.si.configInstallUpdateExtensionList=-updateSIFeaturePack

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.configRemoveUpdateExtensionList
#
# Description:  Defines extension for rolling back SI feature pack
#
#     Default:  -rollbackSIFeaturePack
#
#     Example:  -rollbackSIFeaturePack

wp.si.configRemoveUpdateExtensionList=-rollbackSIFeaturePack

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.FunctionalArea
#
# Description:  Defines SI feature pack function area
#
#     Default:  featurepackSI
#
#     Example:  featurepackSI

wp.si.FunctionalArea=featurepackSI

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.deleteIntermediateFileOnExit
#
# Description:  Defines if you want to delete the intermediate xml file generated for XSLTValid 
#               values include: true: means delete the intermediate xml file generated for XSLT 
#               false: means keep the intermediate xml file generated for XSLT
#
#     Default:  true
#
#    Examples:  None available

wp.si.deleteIntermediateFileOnExit=true

# -------------------------------------------------------------------------------------------------
#    Property:  wp.si.offlineMode
#
# Description:  Set wp.si.offlineMode to true if you are running solution installer on a machine 
#               that does not have an internet connection Otherwise, set it to false
#
#     Default:  true
#
#    Examples:  None available

wp.si.offlineMode=true
##### END WP.SI PROPERTIES #####

##### BEGIN WP.AC.IMPL PROPERTIES #####
# WP.AC.IMPL loaded from: /opt/IBM/WebSphere/PortalServer/base/wp.ac.impl/wp.ac.impl.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. Advanced Security Configuration using External Security Managers
#
#  2. Tivoli Access Manager: AMJRTE connection parameters
#
#  3. Tivoli Access Manager: PDJrteCfg command and filesystem parameters
#
#  4. Tivoli Access Manager: SvrSslCfg command parameters
#
#  5. Tivoli Access Manager: WebSphere Application Server WebSEAL TAI parameters
#
#  6. Tivoli Access Manager: Portal authorization parameters
#
#  7. Tivoli Access Manager: Portal vault parameters
#
#  8. Netegrity SiteMinder:  Portal/SiteMinder authorization parameters
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) Advanced Security Configuration using External Security Managers
#
#    The following parameters are used for advanced security configuration using external security 
#    managers. Use the properties to specify namespace management parameters that are common to TAM 
#    and SiteMinder
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.EACserverName
#
# Description:  (Optional) You can set different "contexts" to further distinguish externalized 
#               role names from other role names in the Tivoli Access Manager namespace. This 
#               context information will be added to the namespace entry created upon role 
#               externalization. If any of the three context values (EACserverName, EACcellName, or 
#               EACappName) are null, none will be used.
#
#     Default:  WebSphere_Portal
#
#    Examples:  None available

wp.ac.impl.EACserverName=WebSphere_Portal

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.EACcellName
#
# Description:  One of the three context values used to set a different context to further 
#               distinguish the externalized role name
#
#     Default:  No default value
#
#    Examples:  None available

wp.ac.impl.EACcellName=

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.EACappName
#
# Description:  One of the three context values used to set a different context to further 
#               distinguish the externalized role name
#
#     Default:  wps
#
#     Example:  wps

wp.ac.impl.EACappName=wps

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.reorderRoles
#
# Description:  Allows you to either have your externalized Portal rolenames displayed with the 
#               resource type first, or the role types first.
#
#     Default:  false
#
#    Examples: 
#       1) 
#       2) 
#       3) 
#       4) 
#       5) 
#       6) 
#       7) 
#       8) 
#       9) 
#       10) 

wp.ac.impl.reorderRoles=false

###################################################################################################
###################################################################################################
#
# 2) Tivoli Access Manager: AMJRTE connection parameters
#
#    Provide authentication information to enable WebSphere Portal to connect with TAM.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDAdminId
#
# Description:  An administrative user ID for Tivoli Access Manager (TAM) that has access to create 
#               new TAM servers, new Tivoli protected objectspaces, and new Tivoli protected 
#               objects.
#
#     Default:  sec_master
#
#     Example:  sec_master

wp.ac.impl.PDAdminId=sec_master

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDAdminPwd
#
# Description:  This value is the password for the administrative TAM user ID.
#
#     Default:  ReplaceWithYourTAMAdminPwd
#
#    Examples:  None available

wp.ac.impl.PDAdminPwd=ReplaceWithYourPassword

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDPermPath
#
# Description:  This value is the location of the TAM AMJRTE properties file. This properties file 
#               is created by the TAM SvrSslCfg command and contains information such as: Policy 
#               Server host name, ports version of AMJRTE path to encryption keys.
#
#     Default:  ${WasHome}/tivoli/tam/PdPerm.properties
#
#    Examples:  None available

wp.ac.impl.PDPermPath=${WasHome}/tivoli/tam/PdPerm.properties

###################################################################################################
###################################################################################################
#
# 3) Tivoli Access Manager: PDJrteCfg command and filesystem parameters
#
#    The following parameter locations depend on your WebSphere Application Server installation 
#    structure. For more information or detail on the individual parameters, refer to: 
#    http://publib.boulder.ibm.com/infocenter/wasinfo/v6r1/topic/com.ibm.websphere.nd.doc/info/ae/ae/
#    rsec_tampdjrtecfg.html
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDClasspath
#
# Description:  The location of the TAM PD.jar file, which contains the classes required to 
#               establish a connection to the policy server and is passed into the classpath of the 
#               command.
#
#     Default:  ${WasHome}/tivoli/tam/PD.jar
#
#     Example:  No examples are available.

wp.ac.impl.PDClasspath=${WasHome}/tivoli/tam/PD.jar

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDHome
#
# Description:  This value is the location of the TAM AMJRTE, which is the same as the pd.home 
#               system property in a manual execution.
#
#     Default:  ${WasHome}/tivoli/tam/PolicyDirector
#
#    Examples:  None available

wp.ac.impl.PDHome=${WasHome}/tivoli/tam/PolicyDirector

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.JavaHome
#
# Description:  This value is the location of the Java runtime in which to configure, which is the 
#               same as the -java_home command line argument in a manual execution.
#
#     Default:  ${WasHome}/java/jre/
#
#    Examples:  None available

wp.ac.impl.JavaHome=${WasHome}/java/jre/

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.CfgFilesPath
#
# Description:  This value is the required filesystem directory location of the generated TAM 
#               AMJRTE properties. The properties files are created by the TAM PdjrteCfg command, 
#               which is the same as the -cfgfiles_path command line argument in a manual 
#               execution.
#
#     Default:  ${WasHome}/tivoli/tam
#
#     Example:  No examples are available.

wp.ac.impl.CfgFilesPath=${WasHome}/tivoli/tam

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.TamHost
#
# Description:  This value defines the TAM Policy Server used when running PDJrteCfg.
#
#     Default:  your.TAM.Policy.Server.hostname
#
#    Examples:  None available

wp.ac.impl.TamHost=ReplaceWithYourHostname

###################################################################################################
###################################################################################################
#
# 4) Tivoli Access Manager: SvrSslCfg command parameters
#
#    WebSphere Portal requires the following information to run the SvrSslCfg command
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDServerName
#
# Description:  The unique application name and will be used to create a new Tivoli server in the 
#               Access Manager Policy Server. This server will appear in the pdadmin server list 
#               after running the SvrSslCfg command. If a server with the same name appears in the 
#               server list command, the SvrSslCfg command will fail.
#
#     Default:  amwp80
#
#     Example:  No examples are available.

wp.ac.impl.PDServerName=ReplaceWithYourPDServerName

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SvrSslCfgPort
#
# Description:  This value is the configuration port for the application name. This parameter is 
#               currently ignored by the SvrSslCfg command.
#
#     Default:  7223
#
#     Example:  No examples are available.

wp.ac.impl.SvrSslCfgPort=7223

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SvrSslCfgMode
#
# Description:  This value is the configuration mode of the SvrSslCfg command. Currently, the only 
#               valid value is remote.
#
#     Default:  remote
#
#    Examples:  None available

wp.ac.impl.SvrSslCfgMode=remote

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDPolicyServerList
#
# Description:  This value defines host name, port, and priority combinations for your TAM Policy 
#               servers used when running SvrSslCfg.
#
#     Default:  your.TAM.Policy.Server.hostname:7135:1
#
#     Example:  hosta.ibm.com:7135:1 or host1.ibm.com:7135:1, hostb.7135:2

wp.ac.impl.PDPolicyServerList=ReplaceWithYourHostname:ReplaceWithYourPort:1

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDAuthzServerList
#
# Description:  This value defines host name, port, and priority combination for your TAM 
#               authorization servers.
#
#     Default:  your.TAM.Authorization.Server.hostname:7136:1
#
#     Example:  hosta.ibm.com:7136:1

wp.ac.impl.PDAuthzServerList=ReplaceWithYourHostname:ReplaceWithYourPort:1

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDKeyPath
#
# Description:  This value is the file used to store encryption keys used for the SSL communication 
#               between AMJRTE and Tivoli Access manager. This file is generated as a result of the 
#               SvrSslCfg command.
#
#     Default:  ${WasHome}/tivoli/tam/pdperm.ks
#
#    Examples:  None available

wp.ac.impl.PDKeyPath=${WasHome}/tivoli/tam/pdperm.ks

###################################################################################################
###################################################################################################
#
# 5) Tivoli Access Manager: WebSphere Application Server WebSEAL TAI parameters
#
#    WebSphere Portal uses the following information for WebSEAL.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.hostnames
#
# Description:  (Optional) This value sets the WebSEAL TAI's hostnames parameter. You should 
#               include the host name you provided when configuring the WebSEAL instance. The 
#               default behavior when configuring a WebSEAL instance is to use the network short 
#               name. For example, hosta.yourcompany.com may be represented as hosta. When the 
#               WebSEAL instance is configured and if any additional proxies are included, their 
#               host names must be added as well. Presence of this parameter will cause the TAI to 
#               evaluate the VIA header and only handle those requests that contain one of the 
#               provided host name, and port combinations. This value is case-sensitive and may be 
#               a comma-delimited list if more than one host name is provided
#
#     Default:  No default value
#
#     Example:  hosta.yourcompany.com or hosta

wp.ac.impl.hostnames=ReplaceWithYourFQDN

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.ports
#
# Description:  (Optional) This value sets the WebSEAL TAI's ports parameter. You should include 
#               the WebSEAL ports in this comma-delimited list. The default WebSEAL port is 443. 
#               Presence of this parameter will cause the TAI to evaluate the VIA header and only 
#               handle those requests that contain one of the provided host name and port 
#               combinations.
#
#     Default:  No default value
#
#     Example:  443

wp.ac.impl.ports=443

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.loginId
#
# Description:  When you create a TCP junction, this value is WebSEAL identity representing the 
#               reverse proxy on every request. WebSphere Application Server will use this identity 
#               to establish the "trust" that is required to validate the WebSEAL iv-* headers. The 
#               password for this user should be set in the WebSEAL instance's webseald.conf on the 
#               basicauth-dummy-passwd property.
#
#     Default:  wpsadmin
#
#     Example:  No examples are available.

wp.ac.impl.loginId=pp-tai-user

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.TAICreds
#
# Description:  This value is the headers inserted by WebSEAL that the TAI uses to identify the 
#               request as originating from WebSEAL. Inclusion of these headers is associated with 
#               the headers used by the WebSphere Application Server TAI to identify the request as 
#               one from WebSEAL. If you are configuring Portal to use TAM as an external 
#               authorization engine, you must include at least the iv-user and iv-creds headers.
#
#     Default:  iv-user,iv-creds
#
#     Example:  No examples are available.

wp.ac.impl.TAICreds=iv-user,iv-creds

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.checkViaHeader
#
# Description:  You can configure TAI so that the VIA header can be ignored when validating trust 
#               for a request. Set this property to false if none of the hosts in the VIA header 
#               need to be evaluated. When this value is false, you do not need to set the 
#               wp.ac.impl.hostnames and wp.ac.impl.ports properties. The only mandatory property 
#               to set when this value is false is wp.ac.impl.loginId.
#
#     Default:  false
#
#    Examples:  None available

wp.ac.impl.checkViaHeader=false

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.viaDepth
#
# Description:  This value is a positive integer that specifies the number of source hosts in the 
#               VIA header to check for trust. By default, every host in the VIA header is checked, 
#               and if any host is not trusted, trust cannot be established. The VIA depth property 
#               is used when only some of the hosts in the VIA header have to be trusted. The 
#               setting indicates the number of hosts that are required to be trusted.
#
#     Default:  0
#
#     Example:  No examples are available.

wp.ac.impl.viaDepth=0

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.ssoPwdExpiry
#
# Description:  After trust is established for a request, the single sign-on user password is 
#               cached, eliminating the need to have the TAI re-authenticate the single sign-on 
#               user with Tivoli Access Manager for every request. You can modify the cache timeout 
#               period by setting the single sign-on password expiry property to the required time 
#               in seconds. If the password expiry property is set to 0, the cached password never 
#               expires.
#
#     Default:  600
#
#    Examples:  None available

wp.ac.impl.ssoPwdExpiry=600

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.ignoreProxy
#
# Description:  This property can be used to tell the TAI to ignore proxies as trusted hosts. If 
#               set to true the comments field of the hosts entry in the VIA header is checked to 
#               determine if a host is a proxy. Remember that not all proxies insert comments in 
#               the via header indicating that they are proxies. If the checkViaHeader property is 
#               set to false, then the ignoreProxy property has no influence in establishing trust.
#
#     Default:  false
#
#     Example:  No examples are available.

wp.ac.impl.ignoreProxy=false

###################################################################################################
###################################################################################################
#
# 6) Tivoli Access Manager: Portal authorization parameters
#
#    The following information is used to authenticate with TAM.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDRoot
#
# Description:  This value is the root objectspace entry in the TAM namespace. All Portal roles 
#               will be installed under this objectspace entry.
#
#     Default:  /WPv80
#
#    Examples:  None available

wp.ac.impl.PDRoot=/WPv80

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDAction
#
# Description:  When the Tivoli Access Manager external authorization plugin is started, it will 
#               detect and, if necessary, create a custom action in Tivoli Access Manager. The 
#               combination of the action group and the action determines the TAM permission string 
#               required to assign membership to externalized Portal roles.
#
#     Default:  m
#
#     Example:  No examples are available.

wp.ac.impl.PDAction=m

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDActionGroup
#
# Description:  When the Tivoli Access Manager external authorization plugin is started, it will 
#               detect and, if necessary, create a custom action group in Tivoli Access Manager. 
#               The combination of the action group and the action determines the TAM permission 
#               string required to assign membership to externalized Portal roles.
#
#     Default:  [WP80]
#
#     Example:  No examples are available.

wp.ac.impl.PDActionGroup=[WP80]

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.PDCreateAcl
#
# Description:  When Portal externalizes a role, it can automatically create and attach a TAM ACL 
#               granting membership to the user doing the role. If you select false, the TAM 
#               administrator will be responsible for creating TAM ACLs to allow access to Portal 
#               roles.
#
#     Default:  true
#
#    Examples:  None available

wp.ac.impl.PDCreateAcl=true

###################################################################################################
###################################################################################################
#
# 7) Tivoli Access Manager: Portal vault parameters
#
#    The following information is used to confgure a vault for Tivoli Access Manager.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.vaultType
#
# Description:  This value is the new vault type identifier representing the Tivoli GSO lockbox 
#               vault.
#
#     Default:  AccessManager
#
#    Examples:  None available

wp.ac.impl.vaultType=AccessManager

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.vaultProperties
#
# Description:  This value defines a properties file used to configure the vault with TAM specific 
#               user and SSL connection information. This file will automatically be created in the 
#               wp_profile/shared/app/config subdirectory and populated by the ant task based on 
#               previous task execution.
#
#     Default:  accessmanagervault.properties
#
#     Example:  No examples are available.

wp.ac.impl.vaultProperties=accessmanagervault.properties

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.manageResources
#
# Description:  This value determines if the portal credential vault or any custom portlet is 
#               allowed to create new resource objects in TAM. If you set this value to false, your 
#               Tivoli administrator must define the accessible resources to associate users with 
#               using the Tivoli command line or GUI.
#
#     Default:  true
#
#     Example:  No examples are available.

wp.ac.impl.manageResources=true

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.readOnly
#
# Description:  This value determines if the portal credential vault or any custom portlet is 
#               allowed to modify the secrets stored in TAM. If you set this value to true ("Read 
#               Only"), the Tivoli administrator must change the credentials associated with 
#               resources using the Tivoli command line or GUI.
#
#     Default:  false
#
#    Examples:  None available

wp.ac.impl.readOnly=false

###################################################################################################
###################################################################################################
#
# 8) Netegrity SiteMinder:  Portal/SiteMinder authorization parameters
#
#    The following parameters enables WebSphere Portal to authenticate wit Netegrity SiteMinder.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMDomain
#
# Description:  This value is the SiteMinder Domain containing all externalized portal resources.
#
#     Default:  WebSphere Portal v80
#
#    Examples:  None available

wp.ac.impl.SMDomain=WebSphere Portal v80

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMScheme
#
# Description:  This value is the SiteMinder Authentication scheme object name to use when creating 
#               realms.
#
#     Default:  Basic
#
#    Examples:  None available

wp.ac.impl.SMScheme=Basic

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMAgent
#
# Description:  This value is the SiteMinder custom or 4.x web agent created to allow communication 
#               between WebSphere Portal and SiteMinder.
#
#     Default:  ReplaceWithYourSiteMinderAgentName
#
#    Examples:  None available

wp.ac.impl.SMAgent=ReplaceWithYourSiteMinderAgentName

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMAgentPwd
#
# Description:  This value is the SiteMinder custom or 4.x agent password.
#
#     Default:  ReplaceWithYourSiteMinderAgentPwd
#
#    Examples:  None available

wp.ac.impl.SMAgentPwd=ReplaceWithYourPassword

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMAgentGroup
#
# Description:  An externalized portal resource is assigned to a SiteMinder custom agent for 
#               SiteMinder isProtected and isAuthorized calls. In a non-cluster, the agent 
#               specified in the wp.ac.impl.SMAgent parameter is used. However, in a cluster, you 
#               must specify a common SiteMinder Agent Group to be assigned to the resource.
#
#     Default:  No default value
#
#    Examples:  None available

wp.ac.impl.SMAgentGroup=

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMAdminId
#
# Description:  This value is the SiteMinder administrator who must have a scope of System because 
#               new SiteMinder domains and realms will be created, as well as the realms 
#               representing Portal roles and reference to the webagent.
#
#     Default:  siteminder
#
#    Examples:  None available

wp.ac.impl.SMAdminId=siteminder

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMAdminPwd
#
# Description:  This value is the password for the SiteMinder administrative user.
#
#     Default:  ReplaceWithYourSiteMinderAdminPwd
#
#    Examples:  None available

wp.ac.impl.SMAdminPwd=ReplaceWithYourPassword

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMUserDir
#
# Description:  This value is the SiteMinder User Directory object referencing the LDAP server used 
#               for Portal users and groups.
#
#     Default:  ReplaceWithYourSiteMinderUserDirectoryObject
#
#    Examples:  None available

wp.ac.impl.SMUserDir=ReplaceWithYourSiteMinderUserDirectoryObject

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMFailover
#
# Description:  This value is the failover mode for the Siteminder Policy Server. SMFailover must 
#               be set to true if more than 1 policy server is listed in the SMServers property 
#               (wp.ac.impl.SMServers).
#
#     Default:  false
#
#    Examples:  None available

wp.ac.impl.SMFailover=false

# -------------------------------------------------------------------------------------------------
#    Property:  wp.ac.impl.SMServers
#
# Description:  This value is a comma delimited list of server for the SiteMinder agent. Important: 
#               If your Policy Servers are listening on non-default ports (for example: not 
#               44441,44442,44443), you must add the port property for each policy server manually 
#               in the ExternalAccessControlService.properties file.
#
#     Default:  your.Policy.Server.ipaddress
#
#    Examples:  None available

wp.ac.impl.SMServers=your.Policy.Server.ipaddress
##### END WP.AC.IMPL PROPERTIES #####

##### BEGIN WP.WSRP.COMMON PROPERTIES #####
# WP.WSRP.COMMON loaded from: /opt/IBM/WebSphere/PortalServer/base/wp.wsrp.common/wp.wsrp.common.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. WSRP configuration parameters
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) WSRP configuration parameters
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  WsrpContextRoot
#
# Description:  Type the context root to use for web services for remote portlets. If you specify 
#               wsrp as the context root, the following is an example URL: http://localhost:80/wsrp
#
#     Default:  wsrp
#
#     Example:  WSRP context root: context_root/wsrp

WsrpContextRoot=wps/wsrp
##### END WP.WSRP.COMMON PROPERTIES #####

##### BEGIN WP.PROCESSINTEGRATION.CONFIG PROPERTIES #####
# WP.PROCESSINTEGRATION.CONFIG loaded from: /opt/IBM/WebSphere/PortalServer/installer/wp.processintegration.config/wp.processintegration.config.properties


# *****************************************************************
#
# Licensed Materials - Property of IBM
#
# 5724-L21
#
# Copyright IBM Corp. 2006  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# *****************************************************************

###################################################################################################
#
# Index
#
# Properties by Section 
#
#  1. Properties for WebSphere Portal integration with IBM Process Server
#
###################################################################################################
    

###################################################################################################
###################################################################################################
#
# 1) Properties for WebSphere Portal integration with IBM Process Server
#
#    The following properties are used to configure integration with WebSphere Process Server. You 
#    must provide information about the already installed WebSphere Process Server.
#
###################################################################################################
###################################################################################################

# -------------------------------------------------------------------------------------------------
#    Property:  pi.IsCrossCell
#
# Description:  
#
#     Default:  true
#
#    Examples:  None available

pi.IsCrossCell=true

# -------------------------------------------------------------------------------------------------
#    Property:  pi.ProcessServerHostAddress
#
# Description:  This property is used only if the pi.IsCrossCell value is set to true. The server 
#               host name address of the WebSphere Process Server installation located in another 
#               cell.
#
#     Default:  No default value
#
#    Examples:  None available

pi.ProcessServerHostAddress=

# -------------------------------------------------------------------------------------------------
#    Property:  pi.ProcessServerBootstrapPort
#
# Description:  This property is used only if the pi.IsCrossCell value is set to true. The 
#               bootstrap port of the WebSphere Process Server installation located in another 
#               cell.
#
#     Default:  No default value
#
#    Examples:  None available

pi.ProcessServerBootstrapPort=

# -------------------------------------------------------------------------------------------------
#    Property:  pi.ProcessArtifactsLocation
#
# Description:  This property is used only if the pi.IsCrossCell value is set to true. The 
#               directory in which the process artifacts are located.
#
#     Default:  ${USER_INSTALL_ROOT}/processArtifacts
#
#    Examples:  None available

pi.ProcessArtifactsLocation=${USER_INSTALL_ROOT}/processArtifacts

# -------------------------------------------------------------------------------------------------
#    Property:  pi.IsWPSCluster
#
# Description:  This property is used only if the pi.IsCrossCell value is set to false.
#
#     Default:  No default value
#
#    Examples:  None available

pi.IsWPSCluster=

# -------------------------------------------------------------------------------------------------
#    Property:  pi.ClusterName
#
# Description:  This property is used only if the pi.IsCrossCell value is set to false AND 
#               pi.IsWPSCluster value is set to true. The name of the WebSphere Process Server 
#               cluster.
#
#     Default:  No default value
#
#    Examples:  None available

pi.ClusterName=

# -------------------------------------------------------------------------------------------------
#    Property:  pi.NodeName
#
# Description:  This property is used only if the pi.IsCrossCell value is set to false AND 
#               pi.IsWPSCluster value is set to false. The name of the node of the WebSphere 
#               Process Server server.
#
#     Default:  No default value
#
#    Examples:  None available

pi.NodeName=

# -------------------------------------------------------------------------------------------------
#    Property:  pi.ServerName
#
# Description:  This property is used only if the pi.IsCrossCell value is set to false AND 
#               pi.IsWPSCluster value is set to false. This value is the name of the WebSphere 
#               Process Server server.
#
#     Default:  No default value
#
#    Examples:  None available

pi.ServerName=
##### END WP.PROCESSINTEGRATION.CONFIG PROPERTIES #####
